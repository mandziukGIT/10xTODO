---
globs: *.vue,composables/*.ts
alwaysApply: false
---
### Guidelines for VUE

#### VUE

- Use the Composition API instead of the Options API for better type inference and code reuse
- Implement <script setup> for more concise component definitions
- Leverage the defineProps and defineEmits macros for type-safe props and events
- Use the new defineOptions for additional component options
- Implement provide/inject for dependency injection instead of prop drilling in deeply nested components
- Use the Teleport component for portal-like functionality to render UI elsewhere in the DOM
- Leverage ref over reactive for primitive values to avoid unintended unwrapping
- Use v-memo for performance optimization in render-heavy list rendering scenarios
- Implement shallow refs for large objects that don't need deep reactivity
- Leverage the storeToRefs helper to extract reactive properties while maintaining reactivity

#### NUXT

- Leverage auto-imports for Vue and Nuxt composables to reduce boilerplate
- Implement server routes with the server directory for API functionality
- Use Nuxt modules for extending functionality instead of custom plugins when possible
- Leverage the useAsyncData and useFetch composables for data fetching with SSR support
- Implement middleware (defineNuxtRouteMiddleware) for navigation guards
- Use Nuxt layouts for consistent page layouts across routes
- Leverage Nitro for server-side rendering and API routes
- Implement Nuxt plugins for global functionality registration
- Use state management with useState for simple state or Pinia for complex applications
